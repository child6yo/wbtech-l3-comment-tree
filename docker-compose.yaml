services:
  app:
    container_name: comments-tree
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dev-network
  
  postgres:
    image: postgres:13-alpine
    container_name: ct-postgres
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    pids_limit: 100
    ports:
      - "5432:5432"
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    environment:
      - TZ

      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - dev-network

  migrate_pg:
    image: migrate/migrate:v4.18.0
    command: ["-path=/migrations", "-database", "${PG_URL}", "up"]
    volumes:
      - ./schema:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dev-network

  frontend:
    build: ./client
    container_name: ct-nginx
    ports:
      - 80:80
    restart: always
    depends_on:
      - app
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge